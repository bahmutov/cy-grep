name: ci
on: push
jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3

      - name: Run Cypress tests ðŸ§ª
        # https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v5
        with:
          config: 'specPattern=**/unit.js'
      - name: check dependencies ðŸ“¦
        run: npm audit --report

  # TODO: run all e2e tests against the expected results
  test-one-tag:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3

      - name: Run single tag ðŸ§ª
        uses: cypress-io/github-action@v5
        with:
          command: npx cypress-expect run --env grepTags=@tag1 --expect-exactly expects/tag1.json

  test-one-spec-filter:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3

      - name: Run single tag ðŸ§ª
        uses: cypress-io/github-action@v5
        with:
          command: npx cypress-expect run \
            --env grepTags=A,grepFilterSpecs=true,grepOmitFiltered=true \
            --config specPattern=cypress/e2e/effective-tags/*.js \
            --expect-exactly expects/effective-tags/spec-a.json

  # https://github.com/bahmutov/cy-grep/issues/4
  test-effective-tags-AND-filter:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3

      - name: Run single tag ðŸ§ª
        uses: cypress-io/github-action@v5
        with:
          command: npx cypress-expect run \
            --env grepTags=A+smoke,grepFilterSpecs=true,grepOmitFiltered=true \
            --config specPattern=cypress/e2e/effective-tags/*.js \
            --expect-exactly expects/effective-tags/spec-a-smoke.json

  test-required-tags:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3

      - name: Install Cypress ðŸ§ª
        uses: cypress-io/github-action@v5
        with:
          runTests: false

      - name: running the tests without the required tag
        run: |
          npx cypress-expect run \
            --project tests/required-tags \
            --expect-exactly ./tests/required-tags/expect.json

      - name: running the tests WITH the required tag
        run: |
          npx cypress-expect run \
            --project tests/required-tags \
            --env grepTags=@special \
            --expect-exactly ./tests/required-tags/expect-with-required-tag.json

  test-required-tags-only:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3

      - name: Install Cypress ðŸ§ª
        uses: cypress-io/github-action@v5
        with:
          runTests: false

      - name: skips specs with required tags
        run: |
          npx cypress-expect run \
            --project tests/required-tags-only \
            --expect-exactly ./tests/required-tags-only/expect-skip.json

      - name: running the tests WITH the scrape required tag
        run: |
          npx cypress-expect run \
            --project tests/required-tags-only \
            --env grepTags=@scrape \
            --expect-exactly ./tests/required-tags-only/expect-scrape.json

  test-required-tags-parent-suite:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3

      - name: Install Cypress ðŸ§ª
        uses: cypress-io/github-action@v5
        with:
          runTests: false

      - name: running the tests WITH the scrape required tag
        run: |
          npx cypress-expect run \
            --project tests/required-tags-suite \
            --env grepTags=@scrape \
            --expect-exactly ./tests/required-tags-suite/expect-scrape.json

  release:
    needs:
      [
        test,
        test-one-tag,
        test-one-spec-filter,
        test-effective-tags-AND-filter,
        test-required-tags,
        test-required-tags-only,
        test-required-tags-parent-suite,
      ]
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3

      - name: Install only the semantic release ðŸ“¦
        run: npm install semantic-release

      - name: Semantic Release ðŸš€
        uses: cycjimmy/semantic-release-action@v3
        with:
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
